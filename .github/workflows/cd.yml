name: Deploy to Elastic Beanstalk

on:
  # main 브랜치에 PR이 머지될 때 트리거
  push:
    branches:
      - main

  # 수동으로 워크플로를 트리거할 때
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t next-production-image .
          docker tag next-production-image:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/next-production-image:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/next-production-image:latest
      
      - name: Generate Dockerrun.aws.json file
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/next-production-image
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "'$IMAGE_URI:latest'",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "3000"
              }
            ]
          }' > Dockerrun.aws.json

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          use_existing_version_if_available: true
          wait_for_deployment: false
          region: ${{ secrets.AWS_REGION }}
          deployment_package: Dockerrun.aws.json
  
